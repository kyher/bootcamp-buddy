import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { BackButton, FormSection } from "../../components";
import { ViewSection } from "../../components";
import { Activity } from "../../types";
import { WARMUP, EXERCISE, STRETCH } from "../../consts";

const Create: NextPage = () => {
  const [activities, setActivities] = useState<Array<Activity>>([]);
  const [warmupActivityTitle, setWarmupActivityTitle] = useState("");
  const [exerciseActivityTitle, setExerciseActivityTitle] = useState("");
  const [stretchActivityTitle, setStretchActivityTitle] = useState("");
  const [warmupDuration, setWarmupDuration] = useState(0);
  const [exerciseDuration, setExerciseDuration] = useState(0);
  const [stretchDuration, setStretchDuration] = useState(0);

  const handleWarmupActivityTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setWarmupActivityTitle(event.target.value);
  };
  
  const handleExerciseActivityTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setExerciseActivityTitle(event.target.value);
  };
  const handleStretchesActivityTitleChange = (
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    setStretchActivityTitle(event.target.value);
  };

  const handleWarmupActivityDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setWarmupDuration(parseInt(event.target.value));
  };
  
  const handleExerciseActivityDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setExerciseDuration(parseInt(event.target.value));
  };
  const handleStretchesActivityDurationChange = (
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    setStretchDuration(parseInt(event.target.value));
  };

  const handleSubmit = () => {
    setActivities([{title: warmupActivityTitle, duration: warmupDuration, type:WARMUP}, {title: exerciseActivityTitle, duration: exerciseDuration, type:EXERCISE}, {title: stretchActivityTitle, duration: stretchDuration, type:STRETCH}]);
  };

  return (
    <div className="grid place-items-center h-screen ">
      <Head>
        <title>Create your workout</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BackButton />
      <h1 className="text-3xl">Create a new workout</h1>
      <div>
        <FormSection type="Warmup" handleTitleChange={handleWarmupActivityTitleChange} handleDurationChange={handleWarmupActivityDurationChange}/>
        <FormSection type="Exercise" handleTitleChange={handleExerciseActivityTitleChange} handleDurationChange={handleExerciseActivityDurationChange} />
        <FormSection type="Stretch" handleTitleChange={handleStretchesActivityTitleChange} handleDurationChange={handleStretchesActivityDurationChange}/>
        <button
          onClick={handleSubmit}
          className="shadow bg-green-500 hover:bg-green-600 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded w-full"
        >
          Add
        </button>
      </div>
      <h2 className="text-2xl">View your planned workout below:</h2>
      <div>
      <ViewSection activities={activities} />
      </div>
    </div>
  );
};

export default Create;
