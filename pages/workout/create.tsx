import type { NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";
import { BackButton, FormSection } from "../../components";
import { ViewSection } from "../../components";
import { Activity } from "../../types";
import { WARMUP, EXERCISE, STRETCH, VIEW } from "../../consts";

const Create: NextPage = () => {
  const [activities, setActivities] = useState<Array<Activity>>([]);
  const [titles, setTitles] = useState({warmup: '', exercise: '', stretch: ''});
  const [durations, setDurations] = useState({warmup: 0, exercise: 0, stretch: 0});
  const [currentStep, setcurrentStep] = useState(WARMUP);

  useEffect(() => {
    localStorage.setItem('activities', JSON.stringify(activities))
  }, [activities]);

  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const value = event.target.value;
    setTitles({...titles, [event.target.name]: value});
  };

  const handleDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const value = parseInt(event.target.value);
    setDurations({...durations, [event.target.name] : value});
  };
  
  const handleSubmit = () => {
    if(currentStep === WARMUP){
      setcurrentStep(EXERCISE)
    }
    if(currentStep === EXERCISE){
      setcurrentStep(STRETCH)
    }
    if(currentStep === STRETCH){
      setActivities([{title: titles.warmup, duration: durations.warmup, type:WARMUP}, {title: titles.exercise, duration: durations.exercise, type:EXERCISE}, {title: titles.stretch, duration: durations.stretch, type:STRETCH}]);
      localStorage.setItem('activities', JSON.stringify(activities));
      setcurrentStep(VIEW)
    }
  };

  return (
    <div className="grid place-items-center">
      <Head>
        <title>Create your workout</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BackButton />
      <div>
        {currentStep === WARMUP && <FormSection type={WARMUP} handleTitleChange={handleTitleChange} handleDurationChange={handleDurationChange} handleSubmit={handleSubmit} />}
        {currentStep === EXERCISE && <FormSection type={EXERCISE} handleTitleChange={handleTitleChange} handleDurationChange={handleDurationChange} handleSubmit={handleSubmit} />}
        {currentStep === STRETCH && <FormSection type={STRETCH} handleTitleChange={handleTitleChange} handleDurationChange={handleDurationChange} handleSubmit={handleSubmit} />}
        {currentStep === VIEW && <ViewSection activities={activities} />}
      </div>
    </div>
  );
};

export default Create;
